plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13

dependencies {
    implementation project(':hw32-messagingSystem:MessageSystem')

    implementation 'org.flywaydb:flyway-core:latest.release'
    implementation 'org.postgresql:postgresql:latest.release'
    implementation("com.google.code.gson:gson:latest.release")
//    implementation("org.apache.commons:commons-lang3:latest.release")
//    implementation("ch.qos.logback:logback-classic:latest.release")

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:latest.release'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:latest.release'
    implementation 'org.springframework.boot:spring-boot-starter-web:latest.release'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:latest.release'

    implementation("org.webjars:webjars-locator-core:latest.release")
    implementation("org.webjars:sockjs-client:latest.release")
    implementation("org.webjars:stomp-websocket:latest.release")
    implementation("org.webjars:bootstrap:latest.release")
    implementation("org.webjars:jquery:latest.release")

//    testImplementation("org.junit.jupiter:junit-jupiter-engine")
//    testImplementation("org.junit.jupiter:junit-jupiter-params")
//    testImplementation("org.assertj:assertj-core")
//    testImplementation("org.mockito:mockito-junit-jupiter")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}
